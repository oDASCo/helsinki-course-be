{"version":3,"sources":["components/Filter.js","components/AddForm.js","components/PhoneItem.js","components/PhonesList.js","services/phones.js","components/Notification.js","App.js","index.js"],"names":["Filter","searchVal","onSearchName","value","onInput","AddForm","onSubmitAdd","newName","newNumber","onNameChange","onNumberChange","onSubmit","onChange","type","PhoneItem","person","onDelete","name","number","onClick","PhoneList","persons","map","baseUrl","axios","get","newObject","post","id","console","log","delete","newPerson","put","Notification","message","text","notifClass","className","App","useState","listOfPersons","setListOfPersons","setPersons","setNewName","setNewNumber","newSearch","setSearch","notifMessage","setNotifMessage","useEffect","phonesService","then","response","data","updatePerson","setTimeout","catch","err","event","target","filteredPersons","filter","toLowerCase","indexOf","trim","preventDefault","find","item","window","confirm","personForUpdate","personObj","Date","now","concat","error","newList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3944c42.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Filter = ({searchVal, onSearchName}) => {\n    return (\n        <div>\n            <span>Filter shown with</span><input value={searchVal} onInput={onSearchName}/>\n        </div>\n    )\n};\n\nexport default Filter;\n","import React, { useState } from 'react'\n\nconst AddForm = ({onSubmitAdd, newName, newNumber, onNameChange, onNumberChange}) => {\n    return (\n        <div>\n            <form onSubmit={onSubmitAdd}>\n                <div>\n                    name: <input value={newName} onChange={onNameChange}/>\n                </div>\n                <div>\n                    number: <input value={newNumber} onChange={onNumberChange}/>\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n};\n\nexport default AddForm;\n","import React, { useState } from 'react'\n\nconst PhoneItem = ({person, onDelete}) => {\n    return (\n        <li key={person.name}>{person.name} <i>{person.number}</i> <button onClick={() => onDelete(person)}>delete</button></li>\n    )\n};\n\nexport default PhoneItem;\n","import React, { useState } from 'react'\nimport PhoneItem from \"./PhoneItem\";\n\nconst PhoneList = ({persons, onDelete}) => {\n    return (\n        <div>\n            <ul>\n                {persons.map(person => {\n                    return (\n                        <PhoneItem key={person.name} person={person} onDelete={onDelete}/>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n};\n\nexport default PhoneList;\n","import axios from 'axios'\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n};\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n};\n\nconst deletePerson = id => {\n    console.log(id);\n    return axios.delete(`${baseUrl}/${id}`)\n};\n\nconst update = (newPerson, id) => {\n    return axios.put(`${baseUrl}/${id}`, newPerson)\n};\n\nexport default {\n    getAll,\n    create,\n    deletePerson,\n    update\n}\n","const Notification = ({ message }) => {\n    if (message.text === null) {\n        return null\n    }\n\n    let notifClass = '';\n    if (message.text && message.type === 'general') {\n        notifClass = 'notif';\n    } else if (message.text && message.type === 'error') {\n        notifClass = 'error';\n    }\n\n    return (\n        <div className={notifClass}>\n            {message.text}\n        </div>\n    )\n}\n export default Notification;\n","import React, { useState,  useEffect } from 'react'\nimport Filter from \"./components/Filter\";\nimport AddForm from \"./components/AddForm\";\nimport PhoneList from \"./components/PhonesList\";\nimport phonesService from './services/phones'\nimport Notification from './components/Notification';\n\nconst App = () => {\n    const [ listOfPersons, setListOfPersons ] = useState([]);\n    const [ persons, setPersons ] = useState(listOfPersons);\n    const [ newName, setNewName ] = useState('');\n    const [ newNumber, setNewNumber ] = useState('');\n    const [ newSearch, setSearch ] = useState('');\n    const [notifMessage, setNotifMessage] = useState({\n        text: '',\n        type: 'general'\n    });\n\n    const handleNameChange = (event) => {\n        event.preventDefault();\n        setNewName(event.target.value);\n    };\n\n    const handleNumberChange = (event) => {\n        event.preventDefault();\n        setNewNumber(event.target.value);\n    };\n\n    useEffect(() => {\n        phonesService.getAll().then(response => {\n            setListOfPersons(response.data);\n            setPersons(response.data);\n        });\n    }, []);\n\n    const addName = (event) => {\n        event.preventDefault();\n        if (persons.find(item => item.name === newName)) {\n           let answer = window.confirm(`${newName} is already added to phonebook, replace old number?`);\n           if (answer) {\n               let personForUpdate = persons.find(item => item.name === newName);\n               updatePerson(personForUpdate, newNumber);\n           }\n        } else {\n            const personObj = {\n                name: newName,\n                id: +Date.now(),\n                number: newNumber\n            };\n            phonesService\n                .create(personObj)\n                .then(response => {\n                    setPersons(persons.concat(response.data));\n                    setListOfPersons(listOfPersons.concat(response.data));\n                    setNewName('');\n                    setNewNumber('');\n                    setNotifMessage({...notifMessage, text: `${newName}  successfully added`});\n                    setTimeout(() => {\n                        setNotifMessage('');\n                    }, 3000);\n                }).catch(err => {\n                setNotifMessage({type: 'error', text: err.response.data.error});\n                }\n            );\n        }\n    };\n\n\n    const handleSearch = (event) => {\n        if (event.target.value === '') {\n            setSearch('');\n            setPersons(listOfPersons);\n        } else {\n            setSearch(event.target.value);\n            let filteredPersons = listOfPersons.filter(person => person.name.toLowerCase().indexOf(event.target.value.trim().toLowerCase()) !== -1);\n            setPersons(filteredPersons);\n        }\n\n    };\n\n    const deletePerson = ({id, name}) => {\n        let answer = window.confirm(`Delete ${name}`);\n        if (answer) {\n            phonesService\n                .deletePerson(id)\n                .then(() => {\n                    let newList = persons.filter(person => person.id !== id);\n                    setPersons(newList);\n                    setListOfPersons(newList);\n                })\n        }\n    };\n\n    const updatePerson = ({id, name}) => {\n        let updated = {\n            id,\n            name,\n            number: newNumber\n        };\n        phonesService\n            .update(updated, id)\n            .then(response => {\n                setPersons(persons.map(person => person.id !== id ? person : response.data));\n                setListOfPersons(persons.map(person => person.id !== id ? person : response.data));\n                setNewName('');\n                setNewNumber('');\n                setNotifMessage({...notifMessage, text: `Number for ${newName}  successfully updated`});\n                setTimeout(() => {\n                    setNotifMessage('');\n                }, 3000);\n            })\n            .catch(err => {\n                setNotifMessage({type: 'error', text: `Person ${newName} has already removed from server`});\n                setTimeout(() => {\n                    setNotifMessage('');\n                }, 3000);\n            });\n    };\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Filter searchVal={newSearch} onSearchName={handleSearch}/>\n            <h3>Add new</h3>\n            <Notification message={notifMessage} />\n           <AddForm newName={newName}\n                    newNumber={newNumber}\n                    onNameChange={handleNameChange}\n                    onNumberChange={handleNumberChange}\n                    onSubmitAdd={addName}/>\n            <h2>Numbers</h2>\n            <PhoneList persons={persons} onDelete={deletePerson}/>\n        </div>\n    )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}